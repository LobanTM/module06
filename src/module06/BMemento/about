Шаблон: Хранитель (Memento)
=======================================================================================================
Цель:

Сохранить внутренне состояние объекта за его пределы.

=======================================================================================================

Для чего используется:

Фиксирование внутреннего состояния объекта за его пределами не нарушая инкапсуляцию
и восстановления объекта в случае необходимости.

=======================================================================================================
Пример использования:

- необходимо сохранить текущее состояние объекта или его части и восстановление в будущем, но
  прямое получение состояния раскрывает детали реализации и нарушает инкапсуляцию объекта.

=======================================================================================================

Объект, владеющий состоянием, должен иметь два метода:

сделатьСнимок(): будет создавать специальный объект-снимок и заполнять его текущими значениями
    своих публичных и приватных полей.
восстановитьСостояние(х: Снимок): должен скопировать значения полей из поданного объекта-снимка.

Теперь, перед изменением состояния объекта, Клиент сможет сначала получить его снимок
    и сохранить его в истории. Затем, если нужно вернуть прежнее состояние,
    Клиент передаст снимок обратно в объект.

Паттерн Memento полезен в таких случаях:
    необходим функционал undo/redo;
    при транзакциях (базы данных);
    сохранение информации для последующего использования;
    получение информации о состоянии объекта без нарушения инкапсуляции.
Кстати, любую имплементацию интерфейса java.io.Serializable тоже можно считать реализацией шаблона мементо.
Вызов метода writeObject у класса ObjectOutputStream запишет объект в некоторый поток байтов.
С другой стороны, вызов ObjectInputStream.readObject() вернет объект, восстановленный из потока байтов.